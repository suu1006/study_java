package study;

public class Day14_10 {

	public static void main(String[] args) {
		  Var v1 = new Var();//클래스 Var을 참조하는 참조변수 v1을 만들었습니다. Var클래스의 인스턴스 v1이 만들어진것이기 때문에, 동시에 인스턴스 변수 iv도 생성되었습니다.
		     Var v2 = new Var();
		     
		     /*
		      * 인스턴스 변수가 서로 다른 값을 가질 수 있습니다 를 증명하는 코드입니다.
		      * 인스턴스 변수를 사용하기 위해선 위의 두 코드처럼 인스턴스를 생성해서 
		      */
		     v1.iv = 10;
		     v2.iv = 20;
		     //각각의 인스턴스 변수에는 서로 다른 값을 저장할 수 있습니다. 
		     System.out.println("v1의 인스턴스 변수:"+v1.iv);
		     System.out.println("v2의 인스턴스 변수:"+v2.iv);
		     
		     v1.cv = 100;
		     /*
		      * 클래스 변수 cv의 값을 100으로 초기화 해주었습니다. 
		      * 클래스 변수는 모든 인스턴스(객체)에서 하나의 저장공간을 공유합니다. 지금 cv에는 100의 값이 들어가 있으니, 어떤 참조변수.cv 를 이용해 클래스 변수를 호출해도 동일한 값 100을 가집니.
		      */
		     System.out.println("v1의 클래스 변수:"+v1.cv);
		     System.out.println("v2의 클래스 변수:"+v2.cv);
		     
			}
		}
		class Var{
			int iv;
			/*
			 * 인스턴스 변수입니다. 선언 위치는 클래스 내부에 위치하고 있고, 변수가 생성되는 시기는 인스턴스가 생성되었을때 입니다.  
			 * 다시 말해서, 클래스의 인스턴스(객체)가 만들어질때 같이 만들어집니다. 
			 * 인스턴스 변수는 각자 독립적인 저장공간을 가져서, 각자의 인스턴스(객체)마다 서로 다른 값을 가질 수 있습니다.
			 */
			static int cv;
			/*
			 * 클래스 변수는 모든 인스턴스(객체)가 공통된 저장공간을 공유하게 됩니다. 인스턴스 변수와 달리 공통된 값을 저장해야 하는 변수가 필요할때, 클래스 변수를 사용합니다.
			 * 클래스 변수는 인스턴스 변수와 달리 객체를 생성하지 않고도 언제든지 바로 사용할 수 있습니다. 
			 * 사용방법: 클래스 이름.클래스 변수 var.cv
			 */
			void method() {
				int lv = 0;
			}
			/*
			 * 지역변수는 메서드내에서 선언되며 메서드 내에서만 사용 가능합니다. 
			 * 메서드 내에 선언된 지역변수를 클래스,참조변수에서 호출하면 에러가 발생합니다. 우리가 흔히 사용하는 for(int i =0; i<5; i++)에서 사용되는 int i 또한 지역변수입니다.
			 * 이러한 지역변수는 해당 블럭 {~~~}에서만 사용 가능합니다. 
			 * 
			 */
	}