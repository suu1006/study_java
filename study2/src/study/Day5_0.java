package study;

public class Day5_0 {

	public static void main(String[] args) {
		Example example = new Example();
		//클래스 Exmaple의 집주소를 참고하는 객체 example을 생성합니다. 
		//우리는 객체 example이 클래스 Example의 집주소를 찾아가서 메소드를 호출, 활용할수있습니다.
		
		example.method1();
		//값을 입력받지 않는 void 메소드입니다. 
		//메소드의 실행 결과만 보여줄뿐, 어떠한 값을 반환하지는 않습니다. 
		//따라서 반환되는 값이 없으니 활용할수도 없습니다.
		System.out.println();// 보기 편하시라고 만들어놓은 줄바꿈 코드입니다.
		
		example.method2(5); 
		//method2의 매개변수 int x에 5의 값을 넣어줍니다.->  int x = 5;
		System.out.println(); 
		// void메소드이기 때문에 입력받은 변수로 메소드를 실행시켜줄뿐, 
		//실행시킨 값을 반환하지는 않습니다.
		
		example.method3(); 
		//method3은 매개변수를 입력받지는 않지만, 10이라는 값을 반환해주는 메소드입니다. 
		//10을 반환하기 때문에 이 값을 다른값에 더하거나 활용할수 있습니다. 
		//밑에 활용 예시가 나와있으니 참고부탁드립니다.
		System.out.println();
		
		example.method4(3, 5); 
		//method4의 매개변수 a, b에 각자 3, 5의 값을 넣어줍니다
		// -> int a = 3, int b =5;
		System.out.println();
		
		example.method5(1, 2);
		System.out.println(); 
		//void메소드입니다. 
	    //반환해주는 값이 없기 때문에 메소드의 실행된 결과만 보여줄 뿐, 반환하는 값이 없습니다.
		
		//아래 코드는 method3이 반환해주는 값을 이용한 코드입니다. 
		int a1 = example.method3(); 
		//메소드3은 입력받는 매개변수는 없고, 10을 반환해줍니다. 
		//이때 반환되는 10을 a1에 대입해줍니다.
		int b1 = a1+3; 
		//method3은 10을 반환해줍니다. 
		//이때 반환햐준 10이 a1의 값으로 입력되었고, 거기에 3을 더해줍니다. 
		//따라서 a1(10)+3=13, b1에는 13의 값이 입력됩니다. 
		//이렇게 반환(리턴)해준 값을 이용해서 활용할수 있지만, 
		//void메소드는 메소드 내부에서만 작동할 뿐, 실제로 어떤 값을 반환하지는 않습니다.
		
	    System.out.println("b1은 a1+3을 한 값입니다. 따라서 b1은"+b1+"의 값을 가집니다.");
	    System.out.println();
	    
	    //아래 코드 또한 메소드4에서 반환되는 값을 이용한 코드입니다.
	    
	    int a2 = example.method4(2,7);
	    //메소드4는 매개변수 int a, int b의 값을 받아 더해주고 그 값을 반환해주는 메소드입니다. 
	    //반환해준 값은 method3의 경우처럼 다른 변수에 활용할수있습니다.
	    //현재 괄호에 2, 7 이 매개변수로 나타나있습니다. 이는 곧 int a = 2, int b =7을 의미합니다. 
	    //이 둘을 서로 더해주는 메소드이니 반환해주는 값은 2+7, 9가 됩니다.
	    int b2 = a2+10;
	    //a2에는 2+7을 한 결과인 9가 반환되어있습니다. 
	    //여기에 10을 더해준 값이 b2에 들어갑니다. 따라서 b2는 19가 입력됩니다.
	    
	    System.out.println("b2는 method4에서 입력받은 매개변수 int a+int b를 해주고 반환해준 값에 10을 더한 메소드입니다. 따라서 b2의 값은"+b2+"입니다.");
	    //a2에서 "반환"된 값을 정수형변수 b2에서 다시 활용할수 있습니다. 
	    //이렇게 메소드를 실행 후, 반환된 값을 재사용할수 있는것이 void메소드와의 차이입니다.
	}
}
